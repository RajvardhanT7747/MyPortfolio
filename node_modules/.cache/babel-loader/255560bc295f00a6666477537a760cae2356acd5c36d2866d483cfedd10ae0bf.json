{"ast":null,"code":"import{useEffect,useState}from'react';const ScrollColorTransition=()=>{const[activeSection,setActiveSection]=useState('home');useEffect(()=>{const sections=[{id:'home',element:null},{id:'about',element:null},{id:'skills',element:null},{id:'experience',element:null},{id:'projects',element:null},{id:'achievements',element:null},{id:'contact',element:null}];// Get all section elements\nsections.forEach(section=>{section.element=document.getElementById(section.id);});const handleScroll=()=>{const scrollPosition=window.scrollY+window.innerHeight/2;// Find which section is currently in view\nlet currentSection='home';sections.forEach(section=>{if(section.element){const sectionTop=section.element.getBoundingClientRect().top+window.scrollY;const sectionHeight=section.element.offsetHeight;if(scrollPosition>=sectionTop&&scrollPosition<sectionTop+sectionHeight){currentSection=section.id;}}});if(currentSection!==activeSection){setActiveSection(currentSection);// Remove active class from all sections\nsections.forEach(section=>{if(section.element){section.element.classList.remove('section-active');}});// Add active class to current section\nconst currentElement=document.getElementById(currentSection);if(currentElement){currentElement.classList.add('section-active');}// Update body class for global color theme\ndocument.body.className=document.body.className.replace(/section-\\w+/g,'');document.body.classList.add(\"section-\".concat(currentSection));}};// Initial call\nhandleScroll();// Add scroll listener with throttling\nlet ticking=false;const throttledScroll=()=>{if(!ticking){requestAnimationFrame(()=>{handleScroll();ticking=false;});ticking=true;}};window.addEventListener('scroll',throttledScroll);return()=>{window.removeEventListener('scroll',throttledScroll);};},[activeSection]);return null;// This component doesn't render anything visible\n};export default ScrollColorTransition;","map":{"version":3,"names":["useEffect","useState","ScrollColorTransition","activeSection","setActiveSection","sections","id","element","forEach","section","document","getElementById","handleScroll","scrollPosition","window","scrollY","innerHeight","currentSection","sectionTop","getBoundingClientRect","top","sectionHeight","offsetHeight","classList","remove","currentElement","add","body","className","replace","concat","ticking","throttledScroll","requestAnimationFrame","addEventListener","removeEventListener"],"sources":["C:/Users/rajva/OneDrive/Desktop/PortFolio/src/components/ScrollColorTransition.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nconst ScrollColorTransition = () => {\r\n  const [activeSection, setActiveSection] = useState('home');\r\n\r\n  useEffect(() => {\r\n    const sections = [\r\n      { id: 'home', element: null },\r\n      { id: 'about', element: null },\r\n      { id: 'skills', element: null },\r\n      { id: 'experience', element: null },\r\n      { id: 'projects', element: null },\r\n      { id: 'achievements', element: null },\r\n      { id: 'contact', element: null },\r\n    ];\r\n\r\n    // Get all section elements\r\n    sections.forEach(section => {\r\n      section.element = document.getElementById(section.id);\r\n    });\r\n\r\n    const handleScroll = () => {\r\n      const scrollPosition = window.scrollY + window.innerHeight / 2;\r\n\r\n      // Find which section is currently in view\r\n      let currentSection = 'home';\r\n      \r\n      sections.forEach(section => {\r\n        if (section.element) {\r\n          const sectionTop = section.element.getBoundingClientRect().top + window.scrollY;\r\n          const sectionHeight = section.element.offsetHeight;\r\n          \r\n          if (scrollPosition >= sectionTop && scrollPosition < sectionTop + sectionHeight) {\r\n            currentSection = section.id;\r\n          }\r\n        }\r\n      });\r\n\r\n      if (currentSection !== activeSection) {\r\n        setActiveSection(currentSection);\r\n        \r\n        // Remove active class from all sections\r\n        sections.forEach(section => {\r\n          if (section.element) {\r\n            section.element.classList.remove('section-active');\r\n          }\r\n        });\r\n        \r\n        // Add active class to current section\r\n        const currentElement = document.getElementById(currentSection);\r\n        if (currentElement) {\r\n          currentElement.classList.add('section-active');\r\n        }\r\n\r\n        // Update body class for global color theme\r\n        document.body.className = document.body.className.replace(/section-\\w+/g, '');\r\n        document.body.classList.add(`section-${currentSection}`);\r\n      }\r\n    };\r\n\r\n    // Initial call\r\n    handleScroll();\r\n    \r\n    // Add scroll listener with throttling\r\n    let ticking = false;\r\n    const throttledScroll = () => {\r\n      if (!ticking) {\r\n        requestAnimationFrame(() => {\r\n          handleScroll();\r\n          ticking = false;\r\n        });\r\n        ticking = true;\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', throttledScroll);\r\n    \r\n    return () => {\r\n      window.removeEventListener('scroll', throttledScroll);\r\n    };\r\n  }, [activeSection]);\r\n\r\n  return null; // This component doesn't render anything visible\r\n};\r\n\r\nexport default ScrollColorTransition;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}